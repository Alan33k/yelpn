local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local pastebinURL = "https://pastebin.com/raw/QUhTRYYg"  -- URL do Pastebina z zakodowanymi kluczami i czasem wygaÅ›niÄ™cia
local pastebinURLID = "https://pastebin.com/raw/JnPetSMG" 

local HttpService = game:GetService("HttpService")
local validKeys = {}
local validIDs = {}

-- Funkcja do uzyskania bieÅ¼Ä…cego timestampu
local function getCurrentTimestamp()
    return os.time()  -- Zwraca bieÅ¼Ä…cy timestamp
end

-- Funkcja do sprawdzenia, czy klucz jest waÅ¼ny
local function isKeyValid(expiryTimestamp)
    local currentTimestamp = getCurrentTimestamp()  -- BieÅ¼Ä…cy timestamp
    return currentTimestamp < expiryTimestamp  -- JeÅ›li obecny timestamp jest mniejszy, klucz jest waÅ¼ny
end

-- Funkcja do dekodowania base64
local function decodeBase64(data)
    local b = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
    data = string.gsub(data, '[^'..b..'=]', '')  
    return (data:gsub('.', function(x)
        if x == '=' then return '' end
        local r, f = '', (b:find(x) - 1)
        for i = 6, 1, -1 do r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and '1' or '0') end
        return r
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if #x ~= 8 then return '' end
        local c = 0
        for i = 1, 8 do c = c + (x:sub(i, i) == '1' and 2 ^ (8 - i) or 0) end
        return string.char(c)
    end))
end

-- Pobranie danych z Pastebina
local successKeys, responseKeys = pcall(function()
    return game:HttpGet(pastebinURL)
end)

if successKeys and responseKeys then
    -- Rozdzielenie klucza i timestampu przy uÅ¼yciu "|"
    for keyData in responseKeys:gmatch("[^
]+") do
        local encodedKey, timestamp = keyData:match("([^|]+)|(%d+)")
        if encodedKey and timestamp then
            local key = decodeBase64(encodedKey)  -- Dekodowanie klucza z base64
            local expiryTimestamp = tonumber(timestamp)
            -- Sprawdzanie, czy klucz jest jeszcze waÅ¼ny
            if isKeyValid(expiryTimestamp) then
                table.insert(validKeys, key)
            else
                print("Klucz " .. key .. " wygasÅ‚!")
            end
        end
    end
else
    Rayfield:Notify({
        Title = "BÅ‚Ä…d!",
        Content = "Nie udaÅ‚o siÄ™ pobraÄ‡ kluczy! SprawdÅº Pastebin.",
        Duration = 5
    })
end

local successIDs, responseIDs = pcall(function()
    return game:HttpGet(pastebinURLID)
end)

if successIDs and responseIDs then
    for encodedID in responseIDs:gmatch("[^
]+") do  
        local decodedID = decodeBase64(encodedID)  
        table.insert(validIDs, tonumber(decodedID))  
    end  
else
    Rayfield:Notify({
        Title = "BÅ‚Ä…d!",
        Content = "Nie udaÅ‚o siÄ™ pobraÄ‡ listy ID! SprawdÅº Pastebin.",
        Duration = 5
    })
end

-- Sprawdzenie, czy gracz ma dostÄ™p
local localPlayer = game:GetService("Players").LocalPlayer
local playerID = localPlayer.UserId
local accessGranted = false  

for _, id in pairs(validIDs) do
    if id == playerID then  
        accessGranted = true  
        break  
    end  
end  

if not accessGranted then
    localPlayer:Kick("â›” Nie masz dostÄ™pu do tego skryptu!")
end

-- Tworzenie okna Rayfield
local Window = Rayfield:CreateWindow({
   Name = "ðŸ‘€ SLPN SCRIPT",
   LoadingTitle = "UÅ¼ywaÄ‡ rozwaÅ¼nie.",
   LoadingSubtitle = "by polishjack",
   KeySystem = true,
   KeySettings = {
      Title = "SLPN Script | Key",
      Subtitle = "",
      Note = "Pisz pv po klucz, NotTugal",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = validKeys
   }
})

local MainTab = Window:CreateTab("ðŸ“ƒ Glowne", nil)
local AntyCheatSection = MainTab:CreateSection("âœ… AntyCheat")

local Button = MainTab:CreateButton({
   Name = "Delete SLPN Anti Cheat",
   Callback = function()
    local pathsToDelete = {
        "game:GetService('Players').LocalPlayer.PlayerScripts.AntiCheat",
        "game:GetService('ReplicatedStorage').SharedEvents.Soccer.AntiCheat",
        "game:GetService('StarterPlayer').StarterPlayerScripts.AntiCheat"
    }

    for _, path in ipairs(pathsToDelete) do
        local success, errorMessage = pcall(function()
            local object = loadstring("return " .. path)()
            if object then
                object:Destroy()
                Rayfield:Notify({
                   Title = "Delete SLPN Anti Cheat",
                   Content = "Usunieto: " .. path,
                   Duration = 6.5
                })
            else
                Rayfield:Notify({
                   Title = "Delete SLPN Anti Cheat",
                   Content = "Nie znaleziono obiektu: " .. path,
                   Duration = 6.5
                })
            end
        end)
        if not success then
            Rayfield:Notify({
               Title = "Delete SLPN Anti Cheat",
               Content = "BÅ‚Ä…d podczas usuwania: " .. errorMessage,
               Duration = 6.5
            })
        end
    end
   end,
})

local HitboxSection = MainTab:CreateSection("âš½ Konfiguracja Hitboxa")

local plr = ""
local enlargedSize = Vector3.new(15, 15, 15)

local PlayerInput = MainTab:CreateInput({
    Name = "Nazwa gracza (plr)",
    PlaceholderText = "Podaj nazwÄ™ gracza...",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        plr = value
    end
})

local SizeInput = MainTab:CreateInput({
    Name = "WielkoÅ›Ä‡ hitboxa",
    PlaceholderText = "np. 15,15,15",
    RemoveTextAfterFocusLost = false,
    Callback = function(value)
        local x, y, z = value:match("(%d+),(%d+),(%d+)")
        if x and y and z then
            enlargedSize = Vector3.new(tonumber(x), tonumber(y), tonumber(z))
        else
            Rayfield:Notify({
                Title = "BÅ‚Ä…d!",
                Content = "Podaj wartoÅ›ci w formacie: liczba,liczba,liczba (np. 15,15,15)",
                Duration = 5
            })
        end
    end
})
